/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
 * Copyright 2008-2010 Pelican Mapping
 * http://osgearth.org
 *
 * osgEarth is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */

#ifndef OSGEARTH_ENGINE_SEAMLESS_DRIVEROPTIONS
#define OSGEARTH_ENGINE_SEAMLESS_DRIVEROPTIONS 1

#include <osgEarth/Common>
#include <osgEarth/TerrainOptions>

namespace osgEarth
{
namespace Drivers
{
class SeamlessOptions : public TerrainOptions
{
public:
    SeamlessOptions(const ConfigOptions& options = ConfigOptions())
        : TerrainOptions(options), _resolution(64)
    {
        setDriver("seamless");
        fromConfig(_conf);
    }
    optional<int>& resolution() { return _resolution; }
    const optional<int>& resolution() const { return _resolution; }
protected:
    virtual Config getConfig() const
    {
        Config conf = TerrainOptions::getConfig();
        conf.updateIfSet("resolution", _resolution);
        return conf;
    }

    virtual void mergeConfig(const Config& conf)
    {
        TerrainOptions::mergeConfig(conf);
        fromConfig(conf);
    }

private:
    void fromConfig(const Config& conf)
    {
        conf.getIfSet("resolution", _resolution);
    }
    optional<int> _resolution;
};
}
}
#endif
